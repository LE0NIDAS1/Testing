@model PresentationLayer.Models.LevelUpModel
@using PresentationLayer.Models;
@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Create</h2>


@using (Html.BeginForm(new { action = ViewContext.RouteData.GetRequiredString("action") }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>LevelUpModel</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.TypeAction, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.TypeAction, ViewData["ActionConfig"] as SelectList)
                @Html.ValidationMessageFor(model => model.TypeAction, "", new { @class = "text-danger" })
            </div>
        </div>
        @Html.HiddenFor(model => model.IDGame)
        @*<div class="form-group">
                @Html.LabelFor(model => model.ID_ACTIONCONFIG, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ID_ACTIONCONFIG, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ID_ACTIONCONFIG, "", new { @class = "text-danger" })
                </div>
            </div>*@
        <ul class="nav nav-tabs" role="tablist">
            <li role="presentation" class="active"><a href="#GameObject" role="tab" data-toggle="tab">GameObject</a></li>
            <li role="presentation" class=""><a href="#Dependencies" role="tab" data-toggle="tab">Dependencies</a></li>
        </ul>
        <div class="tab-content">
            <div role="tabpanel" class="tab-pane active" id="GameObject">
                <table class="table">
                    <tr>
                        <th class="form-group">
                            @Html.LabelFor(model => model.GameObject.Id, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownListFor(model => model.GameObject.Id, ViewData["GameObject"] as SelectList)
                                @Html.ValidationMessageFor(model => model.GameObject.Id, "", new { @class = "text-danger" })
                            </div>
                        </th>
                    </tr>
                    <tr>
                        <th class="form-group">
                            @Html.LabelFor(model => model.LevelUpCostRate, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.LevelUpCostRate, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.LevelUpCostRate, "", new { @class = "text-danger" })
                            </div>
                        </th>
                    </tr>
                    <tr>
                        <th class="form-group">
                            @Html.LabelFor(model => model.LevelUpGenerateRate, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.LevelUpGenerateRate, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.LevelUpGenerateRate, "", new { @class = "text-danger" })
                            </div>
                        </th>
                    </tr>
                    <tr>
                        <th class="form-group">
                            @Html.LabelFor(model => model.attributesRate, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.attributesRate, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.attributesRate, "", new { @class = "text-danger" })
                            </div>
                        </th>
                    </tr>
                    <tr>
                        <th class="form-group">
                            @Html.LabelFor(model => model.GameObject.AttributeModel.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                        </th>

                        <th class="form-group">
                            @Html.LabelFor(model => model.GameObject.AttributeModel.valor, htmlAttributes: new { @class = "control-label col-md-2" })
                        </th>
                        @foreach (var item in (ViewData["Attributes"] as List<AttributeModel>))
                        {
                           @Html.HiddenFor(modelItem => item.id)
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => item.Name)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.valor)
                            </td>
                            <td>
                                <input id="isSelected" name="Attribute" type="checkbox" value="@item.id" />
                                @*@Html.CheckBoxFor(modelItem => item.isSelected)*@
                            </td>

                        </tr>
                        }
                    </table>
                </div>
                <div role="tabpanel" class="tab-pane" on id="Dependencies">
                    <table class="table">
                        <tr>
                            <th class="form-group">
                                @Html.LabelFor(model => model.GameObject.Id, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.DropDownListFor(model => model.GameObject.Id, ViewData["GameObject"] as SelectList)
                                    @Html.ValidationMessageFor(model => model.GameObject.Id, "", new { @class = "text-danger" })
                                </div>
                            </th>
                        </tr>
                        <tr>
                            <th class="form-group">
                                @Html.LabelFor(model => model.GameObject.Id, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.DropDownListFor(model => model.GameObject.Id, ViewData["GameObject"] as SelectList)
                                    @Html.ValidationMessageFor(model => model.GameObject.Id, "", new { @class = "text-danger" })
                                </div>
                            </th>
                        </tr>
                    </table>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Create" id="button" class="btn btn-info" />
                    </div>
                </div>
            </div>
        </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        $(function () {
            // bind change event to select
            $('#ID_GAMEOBJECT').on('change', function () {
                $('form').attr('action', '/LevelUp/reload');
                $('form').submit();
            });
        });
    </script>
<script>
        $(function () {
            // bind change event to select
            $('#button').on('click', function () {
                $('form').attr('action', '/LevelUp/Create4');               
            });
        });
</script>
}
