@model PresentationLayer.Models.GameModel

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Create</h2>


@using (Html.BeginForm("Create", "Game", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>GameModel</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.domain, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.domain, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                @Html.ValidationMessageFor(model => model.domain, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-2">@Html.DisplayNameFor(model => model.css)</label>
            @*<div class="col-md-10">
                    <img src="@Model.css" class="img-thumbnail" width="304" height="236" id="Logo">
                </div>*@
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.css_file, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.css_file, new { htmlAttributes = new { type = "file", accept = "text/css", @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.css_file, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-2">@Html.DisplayNameFor(model => model.Logo)</label>
            <div class="col-md-10">
                <img src="@Model.Logo" class="img-thumbnail" width="304" height="236" id="Logo">
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Logo_File, htmlAttributes: new { @class = "control-label col-md-2", required = "required" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Logo_File, new { htmlAttributes = new { type = "file", accept = "image/jpeg,image/x-png,image/gif", @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Logo_File, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.state, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.state, new { htmlAttributes = new { @readonly = "readonly", @class = "form-control", required = "required" } })
                @Html.ValidationMessageFor(model => model.state, "", new { @class = "text-danger" })
                <div class="onoffswitch">
                    <input type="checkbox" name="onoffswitch" class="onoffswitch-checkbox" id="myonoffswitch">
                    <label id="stateGame" class="onoffswitch-label" for="myonoffswitch"></label>
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FacebookAppID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FacebookAppID, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FacebookAppID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.facebookAuth, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.facebookAuth, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.facebookAuth, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FacebookAppSecret, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FacebookAppSecret, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FacebookAppSecret, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.GoogleClientID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.GoogleClientID, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.GoogleClientID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.GoogleClientSecret, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.GoogleClientSecret, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.GoogleClientSecret, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input id="submitGame" type="submit" value="Create" class="btn btn-info" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        $(document).ready(function () {
            ($('#state').attr("value", "Inactivo"))
            $('#state').text("Inactivo");
        });

        $('#myonoffswitch').on('click', function () {
            if ($('#state').attr("value") == "Activo") {
                $('#state').attr("value", "Inactivo");
                $('#state').text("Inactivo");
            }
            else if ($('#state').attr("value") == "Inactivo") {
                $('#state').attr("value", "Activo");
                $('#state').text("Activo");
            }
        });


        function readURL(input) {

            if (input.files && input.files[0]) {
                var reader = new FileReader();

                reader.onload = function (e) {
                    $('#Logo').attr('src', e.target.result);
                }

                reader.readAsDataURL(input.files[0]);
            }
        }

        $("#Logo_File").change(function () {
            readURL(this);
        });

    </script>
}
